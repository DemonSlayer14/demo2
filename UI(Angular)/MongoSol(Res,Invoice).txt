
Part-I(invoice)
---------
Q1
---------------------------------------------------------------------------
db.invoice.updateMany(
    {"items.itemCode":3813},
    {$inc:{
        "items.$.quantity":1
    }}
)

Q2
----------------------------------------------------------------------------
db.invoice.aggregate([
    {$unwind:"$items"},
    {$group:{
        _id:"$customer.customerName","TotalItemQty":{$sum:"$items.quantity"}
    }},
    {$match:{
        _id:{$in:['Aaron','Amy']}
    }},
    {$sort:{TotalItemQty:-1}}
])


Q3
-------------------------------------------------------------------------------
db.invoice.aggregate([
    {$group:{
        _id:"$customer.cutomerName","AverageBill":{$avg:"$billAmount"}
    }},
    {$match:{
        _id:{$in:['Aaron','Amy']}
    }},
    {$sort:{AverageBill:1}}
])


Q4//first run in terminal & then execute btn
---------------------------------------------------------------------------------
db.invoice.aggregate([
    {$unwind:"$items"},
    {$match:{
        "items.itemCode":1017
    }},
    {$project:{_id:0,items:1}},
    {$out:"items"}
])


Q5
-----------------------------------------------------------------------------------
db.invoice.aggregate([
    {$group:{
        _id:'$customer.customerName',
        "TotalBill":{$sum:'$billAmount'}
    }},
    {$match:{
        _id:{$in:['Lia','Aaron']}
    }},
    {$sort:{'TotalBill':1}},
    {$limit:1}
])


Q6
--------------------------------------------------------------------------------------
db.invoice.aggregate([
    {$match:{billAmount:{$gt:1400}}},
    {$group:{
        _id:null,
        "TotalCount":{$sum:1}
    }}
])


Part-II(resident)
--------------------


Q1
----------------------------------------------------------------------------------------
db.resident.updateMany(
    {Education:'Postgrad'},
    {$set:{income:10000}},
    {$upsert:1}
)


Q2
-----------------------------------------------------------------------------------------
db.resident.aggregate([
    {$group:{
        _id:"$Education",
        "TotalCount":{$sum:1}
    }},
    {$match:{
        _id:{$in:['Graduate','Postgrad']}
    }}
])


Q3
-----------------------------------------------------------------------------------------
db.resident.aggregate([
    {$project:{
        _id:1,"EducationName":{
            $concat:["$Education","-","$Name"]
        }
    }}
])


Q4
------------------------------------------------------------------------------------------
db.resident.deleteMany({
    Education:'Undergrad',
    Citizen:'N',
    DateOfBirth:{$lte:"1951-12-31"}
})

---------------------------------------------------------------------------------------------








Q1
db.weatherlog.find({
    $or:[
        {temp:{$gt:130}},
        {temp:{$lt:-50}}
    ]
}).length();


Q2
db.weatherlog.find(
    {skyCondn:{$all:['mist','hail']}},
    {aircraftID:1,_id:0}
)


Q3
db.weatherlog.updateMany(
    { $and:[
        {windDirDegree:{$gt:250}},
        {windSpeed_mph:{$gt:7}}
    ]},
    { $set:{turbCondn:"light"}}
)


Q4
db.weatherlog.aggregate([
    {$group:{
        _id:"$turbCondn",
        "AvgWindSpeed":{$avg:"$windSpeed_mph"}
    }}
])


Q5
db.weatherlog.aggregate([
    {$match:{skyCondn:"mist"}},
    {$group:{
        _id:"$aircraftID",
        "TotalCount":{$sum:1}
    }}
])


Q6
db.weatherlog.updateMany(
    {$and:[
        {"geo.latitude":{$gt:25}},
        {"geo.alt":{$gt:890}}
    ]},
    {$set:{elevation:25}}
)


Q7
db.component.find(
    {"service.status":"pending"}
).length()


Q8
db.component.updateMany(
    {"stockInv.qtyReqd":{$gt:5}},
    {$inc:{"stockInv.instock":10}}
)

Q9
db.component.aggregate([
    {$sort:{flyingHRS:-1}},
    {$project:{
        _id:1,
        componentName:1,
        flyingHRS:1
    }},
    {$limit:3}
])

Q10
db.component.deleteMany(
    {componentName:{$regex:/^slat/i}}
)